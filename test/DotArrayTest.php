<?php
require_once realpath(__DIR__.'/../src/').DIRECTORY_SEPARATOR.'DotArray.php';

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-12-04 at 23:58:45.
 */
class DotArrayTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var DotArray
     */
    protected $object;

    protected function setUp()
    {
        $this->object = new DotArray(array(
            'hoge' => array(
                'fuga' => 'bar',
            ),
        ));
    }

    /**
     * @covers DotArray::offsetGet
     */
    public function testOffsetGet()
    {
        $this->assertEquals('bar', $this->object['hoge.fuga']);
        $this->assertNull($this->object['hoge.hoge']);
        $this->assertInstanceOf('DotArray', $this->object['hoge']);
    }

    /**
     * @covers DotArray::offsetExists
     */
    public function testOffsetExists()
    {
        $this->assertTrue(isset($this->object['hoge.fuga']));
        $this->assertFalse(isset($this->object['hoge.hoge']));
    }

    /**
     * @covers DotArray::offsetSet
     */
    public function testOffsetSet()
    {
        $this->object['fuga.fuga'] = 'fuuuga';
        $this->assertEquals('fuuuga', $this->object['fuga.fuga']);
    }

    /**
     * @covers DotArray::offsetUnset
     */
    public function testOffsetUnset()
    {
        unset($this->object['hoge.fuga']);
        $this->assertNull($this->object['hoge.fuga']);
        $this->assertNotNull($this->object['hoge']);
    }

    /**
     * @covers DotArray::count
     */
    public function testCount()
    {
        $this->assertCount(1, $this->object);
        $this->assertCount(1, $this->object['hoge']);
    }
}
